@page "/train"
@using System.Globalization
@inherits SharedComponent.BasePage
@inject NavigationManager _navigationManager
@if (IsLoading)
{
    <TrainLoader/>
}

<section class="m-5">
    @if (_iStep == 4)
    {
        <CreateBookingConfirm Data="_createBookingResult" Urls="_urls"/>
    }
    else
    {
        if (_searchResult != null)
        {
            if (_searchResult.TrainList is { Count: > 0 })
            {
                <div class="container mb-6">
                    <div class="contact-form">
                        <div class="text-center">
                            <h3 class="text-uppercase fw-semibold">@Loc["3 steps away from your trip"]</h3>
                        </div>
                        <div class="nav tab-menu2 justify-content-between">
                            <button class="tab-btn active">
                                <span class="icon fs-18">
                                    1
                                </span>@Loc["Departure time"]
                            </button>
                            <button class="tab-btn @(_iStep >= 2 ? "active" : "")">
                                <span class="icon fs-18">
                                    2
                                </span>@Loc["Fare, Class Selection"]
                            </button>
                            <button class="tab-btn @(_iStep >= 3 ? "active" : "")">
                                <span class="icon fs-18">
                                    3
                                </span>@Loc["Passenger Details"]
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row p-2">
                    <div class="col-md-7 p-2">
                        @switch (_iStep)
                        {
                            case 1:
                            {
                                <h3>@Loc[$"Select {(_onewayStep == 0 ? "Outbound" : "Inbound")}"]:
                                    <span
                                        class="text-muted fw-semibold">@_request.Dep - @_request.Arr</span>
                                </h3>

                                <div class="px-6">
                                    <div class="d-flex justify-content-between mb-6">
                                        <div class="btn-group">
                                            <label
                                                class="btn btn-outline btn-color-muted btn-active-light-success"
                                                data-kt-button="true">
                                                <input class="btn-check" type="radio" name="method" value="1"/>
                                                @Loc["Cheapest"]!
                                            </label>
                                            <label
                                                class="btn btn-outline btn-color-muted btn-active-light-success"
                                                data-kt-button="true">
                                                <input class="btn-check" type="radio" name="method"
                                                       checked="checked"
                                                       value="2"/>
                                                @Loc["Fastest"]
                                            </label>
                                            <label
                                                class="btn btn-outline btn-color-muted btn-active-light-success active"
                                                data-kt-button="true">
                                                <div class="input-group flex-nowrap">
                                                    <span class="me-4">@Loc["Departure time"]</span>
                                                    <div class="flex-grow-1">
                                                        <select class="form-select" @bind="_selectTime"
                                                                @bind:after="SearchTrainByTime">
                                                            <OptionDateTime OptType="EnumOpt.Time"></OptionDateTime>
                                                        </select>
                                                    </div>
                                                </div>

                                            </label>
                                        </div>
                                        <div class="form-check form-switch form-switch-lg">
                                            <input class="form-check-input" type="checkbox" role="switch"
                                                   @bind="@_request.Direct" id="fDirect">
                                            <label class="form-check-label" for="fDirect">@Loc["Direct train"]</label>
                                        </div>
                                    </div>
                                    @foreach (var train in _request.Direct ? _storeData.Data![_onewayStep].Where(w => w.Segments?.Count == 1).ToList() : _storeData.Data![_onewayStep])
                                    {
                                        <TrainCard Source="train" CallBack="SetSelectTrain"/>
                                    }
                                </div>
                                break;
                            }
                            case 2:
                            {
                                var sTrain = _selectTrain?.Segments?.Select(s => $"{s.Transport?.Number?.Aggregate((a, b) => $"{a}/{b}")}").Aggregate((a, b) => $"{a}/{b}");
                                if (_request.IsRoundTrip)
                                {
                                    <div class="d-flex justify-content-center mb-6">
                                        <label @onclick="() => { ShowFareClass(0);}"
                                               class="btn btn-outline btn-outline-dashed btn-@(_onewayStep == 0 ? "light-primary" : "active-light-primary") p-2 d-flex align-items-center">
                                            <p class="text-muted fs-2">1. @Loc["Outbound"]</p>
                                            <p class="ms-2 fs-2 text-@(_onewayStep == 0 ? "primary" : "muted")">@_request.Dep - @_request.Arr</p>
                                        </label>
                                        <label @onclick="() => { ShowFareClass(1);}"
                                               class="btn btn-outline btn-outline-dashed btn-@(_onewayStep == 1 ? "light-primary" : "active-light-primary") p-2 d-flex align-items-center">
                                            <p class="text-muted fs-2">2. @Loc["Inbound"]</p>
                                            <p class="ms-2 fs-2 text-@(_onewayStep == 1 ? "primary" : "muted")">@_request.Arr - @_request.Dep</p>
                                        </label>
                                    </div>
                                }

                                <h6 class="mb-6">@Loc["Choose Class and Fare"]<span
                                        class="text-muted">(@Loc["Optional"])</span>
                                </h6>
                                <div class="d-flex flex-row mb-1 mb-sm-3">
                                    <div class="bg-light-primary w-30px align-items-center text-center">
                                        @if (_selectOfferByClass is { Count: > 0 })
                                        {
                                            @_selectOfferByClass?[0].Supplier
                                        }
                                    </div>
                                    <div class="d-flex flex-column ms-5">
                                        <h6 class="mb-3">@_selectTrain?.Summary?.DepartureDate @_selectTrain?.Summary?.DepartureTime.DisplayLeft() - @_selectTrain?.Summary?.ArrivalTime.DisplayLeft() </h6>
                                        <h4 class="mb-3">@_selectTrain?.Summary?.Origin?.Label - @_selectTrain?.Summary?.Destination?.Label</h4>
                                        <h6 class="text-muted mb-3">
                                            @Loc["Duration"] @_selectTrain?.Summary?.TravelDuration</h6>
                                        <h6>@Loc["Train number"]: @sTrain</h6>
                                        <div
                                            class="text-muted">@($"{(_request.Adult > 0 ? $"{_request.Adult} {Loc["Adult"]}" : "")}") @($"{(_request.Child > 0 ? $"{_request.Child} {Loc["Child"]}" : "")}") @_selectTrain?.Amount.AutoFormat()
                                        </div>
                                    </div>
                                </div>
                                @if (_blnValidate)
                                {
                                    <TrainLoader/>
                                }
                                else
                                {
                                    <div class="mb-6">
                                        <div class="ticket-class-wrapper">
                                            <h5 class="mb-2 fw-bold"><em class="text-muted">@Loc["Step 1 of 2"]:</em>
                                                @Loc["Your class"]
                                            </h5>
                                            <div class="ticket-class-container">
                                                <div class="ticket-class-content swiper th-slider overflow-hidden"
                                                     id="ticketClass"
                                                     data-slider-options='{"breakpoints":{"0":{"slidesPerView":1},"576":{"slidesPerView":"1"},"768":{"slidesPerView":"2"},"992":{"slidesPerView":"2"},"1200":{"slidesPerView":"3"}}}'>
                                                    <div class="swiper-wrapper">
                                                        @foreach (var item in _selectGroupClass!)
                                                        {
                                                            var blnActive = item.Guid == _selectClass;
                                                            var lstAmenData = new List<string>();
                                                            if (_dicAmen.ContainsKey($"{item.Guid}"))
                                                            {
                                                                lstAmenData = _dicAmen[$"{item.Guid}"];
                                                            }

                                                            var iCount = _selectOfferClass?.Count(w => w.Guid == item.Guid) ?? 0;
                                                            <div class="swiper-slide">
                                                                <div class="ms-6 h-20px">
                                                                    @if (item.Price == _selectOfferClass?.Min(m => m.Price))
                                                                    {
                                                                        <span class="badge badge-danger p-3">Cheapest Class</span>
                                                                    }
                                                                </div>
                                                                <div
                                                                    class="ticket-class-detail @(blnActive ? "bg-light-primary" : "")"
                                                                    @onclick="() => { SetSelectClass(item.Guid); }">
                                                                    <h4 class="text-center text-uppercase mt-5">@item.Name</h4>
                                                                    @if (lstAmenData is { Count: > 0 })
                                                                    {
                                                                        var aDataFull = _storeAmenities.Where(ws => lstAmenData.Contains($"{ws.Id}"))
                                                                            .Select(s => s.Translations).ToList();
                                                                        if (blnActive)
                                                                        {
                                                                            if (!dicCondition.Keys.Contains(_onewayStep))
                                                                            {
                                                                                dicCondition.Add(_onewayStep, []);
                                                                            }
                                                                            dicCondition[_onewayStep] = aDataFull.Select(s => $"{s?.En}").ToList();
                                                                        }
                                                                        <ul class="position-relative">
                                                                            @foreach (var amen in aDataFull)
                                                                            {
                                                                                <li>@amen?.En</li>
                                                                            }
                                                                        </ul>
                                                                    }
                                                                    <div class="mt-auto w-100">
                                                                        <h5 class="text-end me-2">
                                                                            Fare @(iCount > 1 ? "from" : "")
                                                                            @item.Price.AutoFormat()</h5>
                                                                    </div>
                                                                    <div
                                                                        class="d-flex flex-center @(blnActive ? "bg-primary text-white" : "bg-light-primary") text-uppercase h-40px w-100">
                                                                        @if (blnActive)
                                                                        {
                                                                            <i
                                                                                class="fas fa-check me-2"></i>
                                                                        }
                                                                        @Loc["Selected"]
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div data-slider-prev="#ticketclass"
                                                         class="ticket-arrow-prev slider-prev">
                                                        <div
                                                            class="ticket-arrow-content bg-primary bg-hover-success rounded-end-3">
                                                            <span class="text-center text-white">@("<")</span>
                                                        </div>
                                                    </div>
                                                    <div
                                                        data-slider-next="#ticketClass"
                                                        class="ticket-arrow-next slider-next">
                                                        <div
                                                            class="ticket-arrow-content bg-primary bg-hover-success rounded-start-3">
                                                            <span class="text-center text-white">></span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card shadow-sm mb-6">
                                        <div class="card-body">
                                            <h5>@Loc["Step 2 of 2"] : <span class="fw-semibold">@Loc["Select your Fare"]</span>
                                            </h5>
                                            <div class="row">
                                                @foreach (var item in _selectOfferByClass!)
                                                {
                                                    var blnActive = _storeData.SelectOffer?.Contains($"{item.OfferId}") ?? false;
                                                    var lstFareCon = new List<RailLanguageName?>();
                                                    if (_dicAmen.ContainsKey($"{item.TariffGuid}"))
                                                    {
                                                        var ids = _dicAmen[$"{item.TariffGuid}"];
                                                        lstFareCon = _storeAmenities.Where(w => ids.Contains($"{w.Id}")).Select(s => s.Translations).ToList();
                                                    }

                                                    <div
                                                        class="col-md-4 rounded border border-hover-info border-gray-500 p-0 mx-2 @(blnActive ? " bg-light-success" : "")"
                                                        @onclick="() => { SetTariff(item);}">
                                                        <div class="d-flex flex-column justify-content-center">
                                                            <div class="p-2">
                                                                <h4 class="fw-semibold mb-6">@item.TariffName</h4>
                                                                <h5 class="text-end fw-bold">@item.Price.AutoFormat()</h5>
                                                                @if (lstFareCon is { Count: > 0 })
                                                                {
                                                                    if (blnActive)
                                                                    {
                                                                        if (!dicFareCondition.Keys.Contains(_onewayStep))
                                                                        {
                                                                            dicFareCondition.Add(_onewayStep, []);
                                                                        }
                                                                        dicFareCondition[_onewayStep] = lstFareCon.Select(s => $"{s?.En}").ToList();
                                                                    }
                                                                    foreach (var amen in lstFareCon)
                                                                    {
                                                                        <p>@amen?.En</p>
                                                                    }
                                                                }
                                                            </div>
                                                            <div
                                                                class="d-flex flex-center @(blnActive ? "bg-success text-white" : "bg-light-success") text-uppercase h-40px w-100">
                                                                @if (blnActive)
                                                                {
                                                                    <i class="fas fa-check me-2"></i>
                                                                }
                                                                @Loc["Selected"]
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }

                                break;
                            }
                            case 3:
                                <h4 class="mb-6">@Loc["Ticket Options"] > <span
                                        class="text-muted">@Loc["Passenger Details"]</span>
                                </h4>
                                <EditForm Model="_rqCreate" class="form">
                                    <FluentValidationValidator @ref="_fluentValidationValidator"/>
                                    <div class="rounded border border-gray-500 p-3 mb-5">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h5 class="fw-semibold text-uppercase">@Loc["Buyer Information"]</h5>
                                            <span class="text-danger">*@Loc["These fields are required"]</span>
                                        </div>
                                        <div class="row g-8 mb-5">
                                            <div class="col-md-6">
                                                <label class="required fw-semibold form-label">@Loc["First Name"]</label>
                                                <input class="form-control" type="text"
                                                       @bind="_rqCreate.Buyer!.FirstName" id="FirstNameContact">
                                                <ValidationMessage For="@(() => _rqCreate.Buyer!.FirstName)"/>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="required fw-semibold form-label">@Loc["Last Name"]</label>
                                                <input class="form-control" type="text"
                                                       @bind="_rqCreate.Buyer!.LastName">
                                                <ValidationMessage For="@(() => _rqCreate.Buyer!.LastName)"/>
                                            </div>
                                        </div>
                                        <div class="row g-9 mb-5">
                                            <div class="col-md-6">
                                                <label class="required fw-semibold form-label">@Loc["Email Address"]</label>
                                                <input class="form-control" type="text"
                                                       @bind="_rqCreate.Buyer!.Email">
                                                <ValidationMessage For="@(() => _rqCreate.Buyer!.Email)"/>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="required fw-semibold form-label">@Loc["Phone number"]</label>
                                                <input class="form-control" type="text"
                                                       placeholder="+000 000 000 000"
                                                       @bind="_rqCreate.Buyer!.Phone">
                                                <ValidationMessage For="@(() => _rqCreate.Buyer!.Phone)"/>
                                                <div class="text-muted">@Loc["International format, like"] +123456789012
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="rounded border border-gray-500 p-3 mb-5">
                                        <h3 class="fw-semibold">@Loc["Passenger Information"]</h3>
                                        @foreach (var pax in _rqCreate.Passengers!)
                                        {
                                            <div class="d-flex justify-content-between">
                                                <h6 class="text-capitalize">@pax.Type</h6>
                                                <div class="form-check form-switch mb-6">
                                                    <input class="form-check-input" type="checkbox"
                                                           value="false"
                                                           @onchange="(e) => { if((bool)e.Value! == true){pax.FirstName = _rqCreate.Buyer!.FirstName; pax.LastName = _rqCreate.Buyer!.LastName;}}"
                                                           id="flexSwitchDefault"/>
                                                    <label class="form-check-label" for="flexSwitchDefault">
                                                        @Loc["Use Contact Details"]
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="row g-9 mb-5">
                                                <div class="col-md-6 fv-row">
                                                    <label class="required fw-semibold form-label">@Loc["First Name"]</label>
                                                    <input class="form-control"
                                                           type="text"
                                                           @bind="@pax.FirstName">
                                                    <ValidationMessage For="@(() => pax!.FirstName)"/>
                                                </div>
                                                <div class="col-md-6 fv-row">
                                                    <label class="required fw-semibold form-label">@Loc["Last Name"]</label>
                                                    <input class="form-control"
                                                           type="text"
                                                           @bind="@pax.LastName">
                                                    <ValidationMessage For="@(() => pax!.LastName)"/>
                                                </div>
                                            </div>
                                            @if (pax.Type != "adult")
                                            {
                                                <div class="col-md-6 fv-row">
                                                    <label
                                                        class="required fs-6 fw-semibold mb-2">@Loc["Birthdate"]</label>
                                                    <div class="row">
                                                        <div class="col-md-4">
                                                            <select class="form-select bg-light-warning"
                                                                    id="@Guid.NewGuid()"
                                                                    @onchange="(e) => { UpdateDob(e, 0, pax); }">
                                                                <OptionDateTime OptType="EnumOpt.Month"
                                                                                Value="@(pax.Dob.ToString("MMM"))"/>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <select class="form-select bg-light-warning"
                                                                    id="@Guid.NewGuid()"
                                                                    @onchange="(e) => { UpdateDob(e, 1, pax); }">
                                                                <OptionDateTime OptType="EnumOpt.Day"
                                                                                Value="@($"{pax.Dob.Day}")"/>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <select class="form-select bg-light-warning"
                                                                    id="@Guid.NewGuid()"
                                                                    @onchange="(e) => { UpdateDob(e, 2, pax); }">
                                                                <OptionDateTime OptType="EnumOpt.Year"
                                                                                Value="@($"{pax.Dob.Year}")"/>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </EditForm>
                                break;
                        }
                    </div>
                    <div class="col-md-5 ps-10">
                        <h4 class="text-uppercase">@Loc["Your Tickets"]</h4>
                        <div
                            class="row rounded-start rounded-20 position-relative px-5 w-100 pb-4 border border-gray-500 mb-6">
                            <span class="position-absolute top-0 start-0 h-100 bg-gray-400" style="width: 6px;"></span>
                            @switch (_iStep)
                            {
                                case < 2:
                                    <div class="d-flex flex-column flex-center min-h-200px">
                                        <h6>@("<< ")@Loc["Select an option from the list"]</h6>
                                        <p class="fs-5 text-muted">@Loc["Please select a ticket from the list"]</p>
                                    </div>
                                    break;
                                case 2:
                                case 3:
                                    <div class="d-flex flex-column">
                                        @{
                                            var sumTrain = _storeData.SelectTrain!.Take(_request.IsRoundTrip ? 2 : 1).ToList();
                                            var iIndex = -1;
                                            foreach (var itemTrain in sumTrain)
                                            {
                                                iIndex++;
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <h6
                                                        class="fw-bold text-uppercase">@itemTrain?.Summary?.Operator</h6>

                                                    @{
                                                        var index = iIndex;
                                                    }
                                                    <button class="btn btn-link btn-color-info btn-active-color-primary"
                                                            @onclick="async () => {await ShowEditConfirm(itemTrain!);}">
                                                        @Loc["Edit"]
                                                    </button>
                                                </div>
                                                <div class="d-flex justify-content-between fs-4">
                                                    <div>
                                                    <span
                                                        class="text-muted">@Loc["OUT"]</span>
                                                        <span
                                                            class="fw-semibold">@itemTrain?.Summary?.DepartureDate @itemTrain?.Summary?.DepartureTime.DisplayLeft() - @itemTrain?.Summary?.ArrivalTime.DisplayLeft()</span>
                                                    </div>
                                                    <div class="text-muted fs-2">
                                                        @itemTrain?.Amount.AutoFormat()</div>
                                                </div>
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <h6>@itemTrain?.Summary?.Origin?.Label?.SplitExt("-").FirstOrDefault() - @itemTrain?.Summary?.Destination?.Label?.SplitExt("-").FirstOrDefault()</h6>
                                                    <div class="d-flex align-items-center collapsible py-3 toggle  mb-0"
                                                         data-bs-toggle="collapse"
                                                         data-bs-target="#@itemTrain?.OfferId">
                                                        <div
                                                            class="btn btn-sm btn-icon mw-20px btn-active-color-primary me-5">
                                                            <i class="ki-duotone ki-arrow-down toggle-on text-primary fs-1">
                                                            <span
                                                                class="path1"></span>
                                                                <span
                                                                    class="path2"></span></i>
                                                            <i class="ki-duotone ki-arrow-up toggle-off fs-1">
                                                                <span class="path1"></span>
                                                                <span class="path2"></span>
                                                            </i>

                                                        </div>
                                                        <p class="text-gray-700 fw-bold mb-0 cursor-pointer text-primary fs-2">
                                                            @Loc["See itinerary details"]
                                                        </p>
                                                    </div>
                                                </div>
                                                <div id="@itemTrain?.OfferId" class="collapse fs-6 ms-1 p-10">
                                                    <div class="timeline-label bg-white">
                                                        @{
                                                            var iCount = 0;
                                                            var sSaveDate = "";
                                                            foreach (var item in itemTrain?.Summary?.TransfersDetails!)
                                                            {
                                                                if (iCount > 0)
                                                                {
                                                                    <div class="timeline-item mb-3">
                                                                        <div
                                                                            class="timeline-label fw-bold text-gray-800 fs-6 d-flex flex-column">
                                                                        </div>
                                                                        <div
                                                                            class="d-flex flex-row-auto align-items-center">
                                                                            <div class="w-40px">
                                                                            </div>
                                                                            <i class="ki-duotone ki-arrow-mix">
                                                                                <span class="path1"></span>
                                                                                <span class="path2"></span>
                                                                            </i>
                                                                            <span
                                                                                class="mx-2">Switch @($"{item.DepartureDate} {item.DepartureTime}".CalConnectingTime(sSaveDate))</span>
                                                                        </div>
                                                                    </div>
                                                                }

                                                                <div class="timeline-item mb-3">
                                                                    <div
                                                                        class="timeline-label fw-bold text-gray-800 fs-6 d-flex flex-column">
                                                                        <div
                                                                            class="fw-semibold">@item.DepartureTime.DisplayLeft()</div>
                                                                        <div class="h-20px"></div>
                                                                        <div
                                                                            class="fw-semibold">@item.ArrivalTime.DisplayLeft()</div>
                                                                    </div>
                                                                    <div class="d-flex flex-row-auto">
                                                                        <div
                                                                            class="d-flex flex-column w-40px bg-light-warning">
                                                                        </div>
                                                                        <div
                                                                            class="d-flex flex-column text-gray-700 fs-7 px-3">
                                                                            <div
                                                                                class="fw-semibold">@item.Origin?.Label</div>
                                                                            <div class="h-20px">Train
                                                                                number: @item.Transport?.Number?.FirstOrDefault()</div>
                                                                            <div
                                                                                class="fw-semibold">@item.Destination?.Label</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                sSaveDate = $"{item.ArrivalDate} {item.ArrivalTime}";
                                                                iCount++;
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <h3 class="text-muted mb-4">
                                                    @Loc["Duration"]: @itemTrain.Summary?.TravelDuration.DisplayLeft() @(itemTrain.Summary?.NumberOfTransfers > 0 ? $"{itemTrain.Summary.NumberOfTransfers} change" : "")
                                                </h3>
                                                <div class="d-flex">
                                                    <button class="btn btn-link btn-color-primary"
                                                            @onclick="async () => {await ShowTicketCondition(index);}">
                                                        @Loc["Ticket Conditions"]
                                                    </button>
                                                </div>
                                            }
                                            <div class="separator separator-dotted my-3"></div>
                                            <div class="d-flex align-items-center justify-content-between">
                                                <h4>@Loc["Tickets"]</h4>
                                                <div
                                                    class="fs-2">@($"{(_request.Adult > 0 ? $"{_request.Adult} {Loc["Adult"]}" : "")}") @($"{(_request.Child > 0 ? $"{_request.Child} {Loc["Child"]}" : "")}")
                                                    <span
                                                        class="fw-bold fs-2">@sumTrain.Sum(s => s.Amount).AutoFormat()</span>
                                                </div>
                                            </div>
                                            if (_iStep == 3)
                                            {
                                                var dAmount = sumTrain.Sum(s => s.Amount) ?? 0;
                                                _rqCreate.Amount = dAmount * 1.1;
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <h4>@Loc["Tax and fees"]</h4>
                                                    <div class="fs-2x">@((dAmount * 0.1).AutoFormat())</div>
                                                </div>
                                                <div
                                                    class="d-flex align-items-center justify-content-between fw-semibold">
                                                    <h4>Total</h4>
                                                    <div class="fs-2x">@((dAmount * 1.1).AutoFormat())</div>
                                                </div>
                                            }
                                        }
                                    </div>
                                    break;
                            }
                        </div>
                        @if (_iStep == 2 && !_blnValidate)
                        {
                            <button class="btn btn-primary w-100" @onclick="GoPassenger">@Loc["Passenger Details"]>
                            </button>
                        }
                        @if (_iStep == 3)
                        {
                            <div class="d-flex justify-content-between px-5 mb-10">
                                <button class="btn btn-primary w-100 me-5" @onclick="()=>GotoPay()">@Loc["Pay with Card"]
                                </button>
                                <AuthorizeView>
                                    <Authorized>
                                        <button class="btn btn-success w-100" @onclick="()=>GotoPay(1)">@Loc["Pay with Cash"]</button>
                                    </Authorized>
                                </AuthorizeView>
                            </div>
                            @if (CultureInfo.CurrentCulture.Name == "vi-VN")
                            {
                                <div class="text-center">
                                    Bằng cách nhấp vào nút thanh toán có nghĩa là bạn đã đồng ý với các điều khoản và điều kiện. Chính sách bảo mật. Điều kiện của nhà khai thác. Điều kiện vé (MỘT CHIỀU VÀ KHỨ HỒI).
                                </div> 
                            }
                            else
                            {
                                <div class="text-center">
                                    By clicking the "Pay with Card" you agree to our
                                    <a href="#" class="fw-bold">Terms
                                        and
                                        Conditions</a>, <a href="#" class="fw-bold">Privacy Policy</a>,
                                    <a href="#"
                                       class="fw-bold">Operators'
                                        Conditions</a> and <a href="#" class="fw-bold">Ticket conditions</a>
                                </div>
                            }
                            
                        }
                    </div>
                </div>
            }
            else
            {
                if (_iStep == 0)
                {
                    <div class="container">
                        <div class="alert alert-warning d-flex flex-column align-items-center justify-content-center">
                            <img src="img/generic.svg" alt=""/>
                            <h4>@Loc["No train found between these two stations"]</h4>
                            <span class="text-muted">@Loc["Please select other stations or dates"]</span>
                        </div>
                    </div>
                }
            }
        }
    }
</section>
<CustomModal Title="@Loc["Edit Ticket"]" SaveTitle="@Loc["Edit"]" CancelTitle="@Loc["Cancel"]"
             OnClickCallback="async () => { _iStep = 1; await ToggleModal(); }"
             Backdrop="true" AddClass="modal-dialog-centered">
    <h5>@Loc["Are you sure you want to update the outbound ticket?"]</h5>
    <div class="rounded border border-gray-400 p-6">
        <h5 class="mb-3">@_selectTrain?.Summary?.DepartureDate @_selectTrain?.Summary?.DepartureTime.DisplayLeft() - @_selectTrain?.Summary?.ArrivalTime.DisplayLeft() </h5>
        <h5 class="mb-3">@_selectTrain?.Summary?.Origin?.Label - @_selectTrain?.Summary?.Destination?.Label</h5>
        <h6 class="text-muted mb-3">@Loc["Duration"] @_selectTrain?.Summary?.TravelDuration</h6>
    </div>
</CustomModal>

<CustomModal Title="@Loc["Ticket, Fare Condition"]" HideSaveButton="true" AddClass="modal-dialog-centered" ModalId="TicketCondition">
    <div class="d-flex flex-column">
        @if (dicCondition.Keys.Contains(iSelectCon))
        {
            var lstData = dicCondition[iSelectCon];
            foreach (var s in lstData)
            {
                <li class="d-flex align-items-center py-2">
                    <span class="bullet bullet-dot bg-success me-5"></span> @s
                </li>
            }
        }
        @if (dicFareCondition.Keys.Contains(iSelectCon))
        {
            var lstData = dicFareCondition[iSelectCon];
            <h4>@Loc["Fare Condition"]</h4>
            foreach (var s in lstData)
            {
                <li class="d-flex align-items-center py-2">
                    <span class="bullet bullet-dot bg-info me-5"></span> @s
                </li>
            }
        }
    </div>
</CustomModal>

<Feature4Step/>